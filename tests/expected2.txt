[Cycle 1]
IF: ANDI (0x3001)
ID: NOP
EX: NOP
WB: NOP

[Cycle 2]
IF: ANDI (0x3000)
ID: ANDI R1, R0, 1
EX: NOP
WB: NOP

[Cycle 3]
IF: ANDI (0x3005)
ID: ANDI R2, R0, 0
EX: ANDI R1, R0, 1 = 0x01
WB: ANDI (R1 ← 0x01)

[Cycle 4]
IF: ADD (0x0000)
ID: ANDI R3, R0, 5
EX: ANDI R2, R0, 0 = 0x00
WB: ANDI (R2 ← 0x00)

[Cycle 5]
IF: ADD (0x0000)
ID: ADD R2, R2, R1
EX: ANDI R3, R0, 5 = 0x05
WB: ANDI (R3 ← 0x05)

[Cycle 6]
IF: SUB (0x1000)
ID: ADD R1, R1, 1
EX: ADD R2, R2, R1 = 0x01
WB: ADD (R2 ← 0x01)

[Cycle 7]
IF: BEQZ (0x9000)
ID: SUB R4, R1, R3
EX: ADD R1, R1, 1 = 0x02
WB: ADD (R1 ← 0x02)

[Cycle 8]
IF: JR (0xA000)
ID: BEQZ R4, 1
EX: SUB R4, R1, R3 = 0xFD
WB: SUB (R4 ← 0xFD)

[Cycle 9]
IF: ADD (0x0000)
ID: JR R0, R0, 0
EX: BEQZ R4, 1 (R4 = 0xFD)
    Branch not taken
WB: BEQZ

[Cycle 10]
IF: ADD (0x0000)
ID: ADD R2, R2, R1
EX: JR R0, R0, 0 (PC ← 0x0003)
WB: JR

[Cycle 11]
IF: ANDI (0x3005)
ID: NOP
EX: NOP
WB: NOP

[Cycle 12]
IF: ADD (0x0000)
ID: ANDI R3, R0, 5
EX: NOP
WB: NOP

[Cycle 13]
IF: ADD (0x0000)
ID: ADD R2, R2, R1
EX: ANDI R3, R0, 5 = 0x05
WB: ANDI (R3 ← 0x05)

[Cycle 14]
IF: SUB (0x1000)
ID: ADD R1, R1, 1
EX: ADD R2, R2, R1 = 0x03
WB: ADD (R2 ← 0x03)

[Cycle 15]
IF: BEQZ (0x9000)
ID: SUB R4, R1, R3
EX: ADD R1, R1, 1 = 0x03
WB: ADD (R1 ← 0x03)

[Cycle 16]
IF: JR (0xA000)
ID: BEQZ R4, 1
EX: SUB R4, R1, R3 = 0xFE
WB: SUB (R4 ← 0xFE)

[Cycle 17]
IF: ADD (0x0000)
ID: JR R0, R0, 0
EX: BEQZ R4, 1 (R4 = 0xFE)
    Branch not taken
WB: BEQZ

[Cycle 18]
IF: ADD (0x0000)
ID: ADD R2, R2, R1
EX: JR R0, R0, 0 (PC ← 0x0003)
WB: JR

[Cycle 19]
IF: ANDI (0x3005)
ID: NOP
EX: NOP
WB: NOP

[Cycle 20]
IF: ADD (0x0000)
ID: ANDI R3, R0, 5
EX: NOP
WB: NOP

[Cycle 21]
IF: ADD (0x0000)
ID: ADD R2, R2, R1
EX: ANDI R3, R0, 5 = 0x05
WB: ANDI (R3 ← 0x05)

[Cycle 22]
IF: SUB (0x1000)
ID: ADD R1, R1, 1
EX: ADD R2, R2, R1 = 0x06
WB: ADD (R2 ← 0x06)

[Cycle 23]
IF: BEQZ (0x9000)
ID: SUB R4, R1, R3
EX: ADD R1, R1, 1 = 0x04
WB: ADD (R1 ← 0x04)

[Cycle 24]
IF: JR (0xA000)
ID: BEQZ R4, 1
EX: SUB R4, R1, R3 = 0xFF
WB: SUB (R4 ← 0xFF)

[Cycle 25]
IF: ADD (0x0000)
ID: JR R0, R0, 0
EX: BEQZ R4, 1 (R4 = 0xFF)
    Branch not taken
WB: BEQZ

[Cycle 26]
IF: ADD (0x0000)
ID: ADD R2, R2, R1
EX: JR R0, R0, 0 (PC ← 0x0003)
WB: JR

[Cycle 27]
IF: ANDI (0x3005)
ID: NOP
EX: NOP
WB: NOP

[Cycle 28]
IF: ADD (0x0000)
ID: ANDI R3, R0, 5
EX: NOP
WB: NOP

[Cycle 29]
IF: ADD (0x0000)
ID: ADD R2, R2, R1
EX: ANDI R3, R0, 5 = 0x05
WB: ANDI (R3 ← 0x05)

[Cycle 30]
IF: SUB (0x1000)
ID: ADD R1, R1, 1
EX: ADD R2, R2, R1 = 0x0A
WB: ADD (R2 ← 0x0A)

[Cycle 31]
IF: BEQZ (0x9000)
ID: SUB R4, R1, R3
EX: ADD R1, R1, 1 = 0x05
WB: ADD (R1 ← 0x05)

[Cycle 32]
IF: JR (0xA000)
ID: BEQZ R4, 1
EX: SUB R4, R1, R3 = 0x00
WB: SUB (R4 ← 0x00)

[Cycle 33]
IF: ANDI (0x3001)
ID: JR R0, R0, 0
EX: BEQZ R4, 1 (R4 = 0x00)
    Branch taken: PC ← 0x0009
WB: BEQZ

[Cycle 34]
IF: BEQZ (0x9000)
ID: NOP
EX: NOP
WB: NOP

[Cycle 35]
IF: ANDI (0x300A)
ID: ANDI R5, R0, 1
EX: NOP
WB: NOP

[Cycle 36]
IF: ANDI (0x3014)
ID: BEQZ R5, 2
EX: ANDI R5, R0, 1 = 0x01
WB: ANDI (R5 ← 0x01)

[Cycle 37]
IF: BEQZ (0x9000)
ID: ANDI R6, R0, 10
EX: BEQZ R5, 2 (R5 = 0x01)
    Branch not taken
WB: BEQZ

[Cycle 38]
IF: ANDI (0x3028)
ID: ANDI R7, R0, 20
EX: ANDI R6, R0, 10 = 0x0A
WB: ANDI (R6 ← 0x0A)

[Cycle 39]
IF: ANDI (0x301E)
ID: BEQZ R0, 2
EX: ANDI R7, R0, 20 = 0x14
WB: ANDI (R7 ← 0x14)

[Cycle 40]
IF: ANDI (0x3009)
ID: ANDI R8, R0, 40
EX: BEQZ R0, 2 (R0 = 0x00)
    Branch taken: PC ← 0x0010
WB: BEQZ

[Cycle 41]
IF: ADD (0x0000)
ID: NOP
EX: NOP
WB: NOP

[Cycle 42]
IF: NOP (0xFFFF)
ID: ANDI R8, R0, 40
EX: NOP
WB: NOP

[Cycle 43]
IF: IDLE
ID: NOP
EX: ANDI R8, R0, 40 = 0x28
WB: ANDI (R8 ← 0x28)

[Cycle 44]
IF: IDLE
ID: IDLE
EX: NOP
WB: NOP

[Cycle 45]
IF: IDLE
ID: IDLE
EX: IDLE
WB: NOP

==== SIMULATION COMPLETE ====
Total cycles executed: 45

==== REGISTER DUMP ====
R0 : 0x00  R1 : 0x05  R2 : 0x0A  R3 : 0x05
R4 : 0x00  R5 : 0x01  R6 : 0x0A  R7 : 0x14
R8 : 0x28  R9 : 0x00  R10: 0x00  R11: 0x00
R12: 0x00  R13: 0x00  R14: 0x00  R15: 0x00
R16: 0x00  R17: 0x00  R18: 0x00  R19: 0x00
R20: 0x00  R21: 0x00  R22: 0x00  R23: 0x00
R24: 0x00  R25: 0x00  R26: 0x00  R27: 0x00
R28: 0x00  R29: 0x00  R30: 0x00  R31: 0x00
R32: 0x00  R33: 0x00  R34: 0x00  R35: 0x00
R36: 0x00  R37: 0x00  R38: 0x00  R39: 0x00
R40: 0x00  R41: 0x00  R42: 0x00  R43: 0x00
R44: 0x00  R45: 0x00  R46: 0x00  R47: 0x00
R48: 0x00  R49: 0x00  R50: 0x00  R51: 0x00
R52: 0x00  R53: 0x00  R54: 0x00  R55: 0x00
R56: 0x00  R57: 0x00  R58: 0x00  R59: 0x00
R60: 0x00  R61: 0x00  R62: 0x00  R63: 0x00

==== STATUS REGISTER ====
SREG: 0x10 (---Z)

==== PROGRAM COUNTER ====
PC: 0x0011

==== INSTRUCTION MEMORY DUMP ====
INSTR_MEM[0x0000]: 0x3001
INSTR_MEM[0x0001]: 0x3000
INSTR_MEM[0x0002]: 0x3005
INSTR_MEM[0x0003]: 0x0000
INSTR_MEM[0x0004]: 0x0000
INSTR_MEM[0x0005]: 0x1000
INSTR_MEM[0x0006]: 0x9000
INSTR_MEM[0x0007]: 0xA000
INSTR_MEM[0x0008]: 0x3001
INSTR_MEM[0x0009]: 0x9000
INSTR_MEM[0x000A]: 0x300A
INSTR_MEM[0x000B]: 0x3014
INSTR_MEM[0x000C]: 0x9000
INSTR_MEM[0x000D]: 0x3028
INSTR_MEM[0x000E]: 0x301E
INSTR_MEM[0x000F]: 0x3009

==== DATA MEMORY DUMP ====
(Empty) 